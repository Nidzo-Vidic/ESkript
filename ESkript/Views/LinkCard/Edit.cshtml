@model ESkript.Models.LinkCard

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>LinkCard</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdLink)

        <div class="form-group" hidden>
            @Html.LabelFor(model => model.LinkContent, "LinkContent", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("LinkContent", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LinkContent, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Link, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Link, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Link, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" value="Save" class="btn btn-default btn-lg">
                    <span class="glyphicon glyphicon-floppy-disk"></span> Speichern
                </button>
            </div>
        </div>
    </div>
}
<br />
<br />
<br />
<div>
    @Html.ActionLink("Zurück", "ReadEditMode", "ScriptContent", new { id = ViewBag.Id}, null)
</div>
